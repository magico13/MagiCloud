@page "/trash"
@using MagiCommon
@using MagiCommon.Extensions
@using MagiCommon.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Logging

@attribute [Authorize]

@inject IMagiCloudAPI MagicApi
@inject ILogger<TrashCan> Logger

<h3>Trash Can</h3>

@if (files?.Any() == true)
{
    <Button Color="Color.Danger" Clicked="@EmptyTrash">Empty Trash</Button>
    <DataGrid
            TItem="SearchResult"
            Data="@files"
            PageSize=10
            Responsive
            ShowPager
            ShowPageSizes
            Sortable
            SelectionMode="DataGridSelectionMode.Single">
        <DataGridColumns>
            <DataGridColumn Field="@nameof(ElasticFileInfo.Name)" Caption="Name">
                <DisplayTemplate>
                     @context.GetFullPath()
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn Field="@nameof(ElasticFileInfo.MimeType)" Caption="File Type" />
            <DataGridColumn Field="@nameof(ElasticFileInfo.LastUpdated)" Caption="Last Updated">
                <DisplayTemplate>
                    @(context.LastUpdated.LocalDateTime)
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn Sortable="false">
                <DisplayTemplate>
                    <Button Color="Color.Primary" Clicked="@(async () => await UndeleteAsync(context))">Restore</Button>
                    <Button Color="Color.Danger" Clicked="@(async () => await PermanentlyDeleteAsync(context.Id))">Perma-Delete</Button>
                </DisplayTemplate>
            </DataGridColumn>
        </DataGridColumns>
    </DataGrid>
}
else
{
    <Paragraph>
        No files in trash...
    </Paragraph>
}
