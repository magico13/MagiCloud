@using Blazorise
@using Humanizer
@using MagiCommon
@using MagiCommon.Extensions
@using MagiCommon.Models
@using Microsoft.Extensions.Logging
@using System.IO

@inject ITokenProvider TokenProvider
@inject IMagiCloudAPI MagicApi
@inject ILogger<FilesComponent> Logger

<Upload OnUploadComplete="@FilesChanged" CurrentDirectory="@currentFolder"/>

<h3>Files</h3>
@if (allFiles?.Any() == true)
{
    <Paragraph>@currentFolder</Paragraph>
    <DataGrid TItem="FileWrapper" 
                Data="@Files"
                Sortable
                SelectionMode="DataGridSelectionMode.Single"
                CommandMode="DataGridCommandMode.Default"
                Responsive
                PageSize=10
                ShowPager
                ShowPageSizes
                Editable
                EditMode="DataGridEditMode.Inline"
                RowRemoved="@RowRemoved"
                RowUpdated="@RowUpdated">
        <DataGridColumns>
            <DataGridCommandColumn TItem="FileWrapper" NewCommandAllowed="false" EditCommandAllowed="true" DeleteCommandAllowed="true"  >
                <SaveCommandTemplate>
                    <Button ElementId="btnSave" Type="ButtonType.Submit" PreventDefaultOnSubmit Color="Color.Primary" Clicked="@context.Clicked"> <Icon Name="IconName.Save"/> </Button>
                </SaveCommandTemplate>
                <CancelCommandTemplate>
                    <Button ElementId="btnCancel" Color="Color.Secondary" Clicked="@context.Clicked"> <Icon Name="IconName.Times"/> </Button>
                </CancelCommandTemplate>
                <EditCommandTemplate>
                    <Button ElementId="btnEdit" Color="Color.Primary" Clicked="@context.Clicked" Visibility="@(context.Item.BackingFileInfo is null ? Visibility.Invisible : Visibility.Visible)"> <Icon Name="IconName.Edit"/> </Button>
                </EditCommandTemplate>
                <DeleteCommandTemplate>
                    <Button ElementId="btnDelete" Color="Color.Danger" Clicked="@context.Clicked" Visibility="@(context.Item.BackingFileInfo is null ? Visibility.Invisible : Visibility.Visible)"> <Icon Name="IconName.Delete"/> </Button>
                </DeleteCommandTemplate>
            </DataGridCommandColumn>
            <DataGridColumn TItem="FileWrapper" Field="Name" Caption="File Name" Editable>
                <DisplayTemplate>
                    @if(context.BackingFileInfo != null)
                    {
                        <Button Type="ButtonType.Link" To="@GetFileContentUri(context.BackingFileInfo.Id, true)" Target="Target.Blank">
                            <Icon Name="IconName.Download" />
                        </Button>
                        <Anchor To="@GetFileContentUri(context.BackingFileInfo.Id, false)" Target="Target.Blank">
                            @context.BackingFileInfo.GetFileName()
                        </Anchor>
                    }
                    else
                    {
                        <Button Clicked="@(() => FilterToFolder(Path.Combine(currentFolder, context.Name)))">
                            @context.Name
                        </Button>
                    }
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="FileWrapper" Field="Size" Caption="File Size">
                <DisplayTemplate>
                    @if (context.Size.HasValue)
                    {
                        <Span>
                            @((context.Size).Value.Bytes().ToString("#.##"))
                        </Span>
                    }
                    else
                    {
                        @string.Empty
                    }
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="FileWrapper" Field="MimeType" Caption="File Type" />
            <DataGridColumn TItem="FileWrapper" Field="LastUpdated" Caption="Last Update">
                <DisplayTemplate>
                    <Tooltip Text="@(context.LastUpdated?.LocalDateTime.ToString())">
                        @(context.LastUpdated?.LocalDateTime.Humanize())
                    </Tooltip>
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="FileWrapper" Field="IsPublic" Caption="Public?" >
                <DisplayTemplate>
                    @if (context.IsPublic == true)
                    {
                        <Button Clicked="@(() => UpdateVisibility(context, false))">
                            <Icon Name="IconName.Eye"/>
                        </Button>
                    }
                    else if (context.IsPublic == false)
                    {
                        <Button Clicked="@(() => UpdateVisibility(context, true))">
                            <Icon Name="IconName.EyeSlash" IconStyle="IconStyle.Regular"/>
                        </Button>
                    }
                </DisplayTemplate>
            </DataGridColumn>
        </DataGridColumns>
    </DataGrid>
}
else
{
    <Paragraph>
        No files found...
    </Paragraph>
}