@using MagiCommon
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Extensions.Logging

@inject ITokenProvider TokenProvider
@inject IMagiCloudAPI MagicApi
@inject ILogger<Login> Logger


@if (string.IsNullOrWhiteSpace(token))
{
    <div>
        <EditForm Model="model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />
            <Microsoft.AspNetCore.Components.Forms.ValidationSummary />
            <p>
                <label>
                    Username:
                    <InputText id="username" @bind-Value="model.Username" />
                </label>
            </p>
            <p>
                <label>
                    Password:
                    <InputText id="password" type="password" @bind-Value="model.Password" />
                </label>
            </p>
            <Button Type="ButtonType.Submit" Color="Color.Primary">Login</Button>
        </EditForm>
    </div>
}
else
{
    <div>
        <p>
            Logged in as @username
        </p>
        @ChildContent
    </div>
}

@code
{
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private LoginModel model = new();
    private string token = null;
    private string username = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            token = await TokenProvider.GetTokenAsync();
            if (!string.IsNullOrWhiteSpace(token))
            {
                var user = await MagicApi.GetUserAsync();
                username = user?.Username;
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Failed to check user");
        }
        finally
        {
            if (string.IsNullOrWhiteSpace(token) || string.IsNullOrWhiteSpace(username))
            {
                await TokenProvider.StoreTokenAsync(null);
                token = null;
            }
        }
        await base.OnInitializedAsync();
    }


    private async Task HandleSubmit()
    {
        var fullToken = await MagicApi.GetAuthTokenAsync(new MagiCommon.Models.LoginRequest
        {
            Username = model.Username,
            Password = model.Password,
            DesiredTimeout = 86400, //1 day
            TokenName = "MagiCloudWeb"
        });
        token = fullToken.Id;
        username = model.Username;
        Logger.LogInformation("Token: {Token}", token);

        await TokenProvider.StoreTokenAsync(token);
    }
}
