@using MagiCommon
@using Microsoft.Extensions.Logging
@using System 
@using System.IO

@inject ITokenProvider TokenProvider
@inject IMagiCloudAPI MagicApi
@inject ILogger<Upload> Logger

<h3>Upload Files</h3>

<p>
    <InputFile OnChange="@LoadFiles" multiple />
</p>

@if (totalUpload > 0)
{
    <p>Uploaded... @uploaded / @totalUpload</p>
}

@code {
    private long maxFileSize = 1024 * 1024 * 8;
    private int maxAllowedFiles = 10;
    private int uploaded = 0;
    private int totalUpload = 0;

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        uploaded = 0;
        var files = e.GetMultipleFiles(maxAllowedFiles);
        totalUpload = files.Count;

        foreach (var file in files)
        {
            try
            {
                var info = new MagiCommon.Models.ElasticFileInfo
                {
                    Name =  Path.GetFileNameWithoutExtension(file.Name),
                    Extension = Path.GetExtension(file.Name).TrimStart('.'),
                    MimeType = file.ContentType,
                    LastModified = file.LastModified,
                    Size = file.Size
                };
                await MagicApi.UploadFileAsync(info, file.OpenReadStream(maxFileSize));
            }
            catch (Exception ex)
            {
                Logger.LogError("File: {Filename} Error: {Error}", 
                    file.Name, ex.Message);
            }

            uploaded++;
        }
    }
}