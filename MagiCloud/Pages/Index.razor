@page "/"
@using MagiCommon
@using MagiCommon.Extensions
@using MagiCommon.Models
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.Extensions.Logging

@attribute [Authorize]

@inject IElasticManager Elastic
@inject ILogger<Index> Logger

<Upload OnUploadComplete=OnFilesUploaded CurrentDirectory=@CurrentFolder />

<Heading Size=HeadingSize.Is3>Files</Heading>
<SearchBar OnSearch=OnSearch />
<FilesComponent FileList=Files OnFolderChanged=OnFolderChanged />

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    private string UserId { get; set; }

    private string CurrentFolder { get; set; }

    private List<SearchResult> Files { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var authState = await AuthenticationStateTask;
        UserId = authState.User.GetUserId();
        await GetFileList();
    }

    public async Task GetFileList()
    {
        try
        {
            Files = await Elastic.GetDocumentsAsync(UserId, false);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Failed to update file list.");
        }
    }

    public async Task OnFilesUploaded()
    {
        // 1 second delay so that the newly uploaded files can make it into elasticsearch
        await Task.Delay(1000);
        await GetFileList();
    }

    public void OnSearch(List<SearchResult> results)
    {
        Files = results;
    }

    public void OnFolderChanged(string folder)
    {
        CurrentFolder = folder;
    }
}