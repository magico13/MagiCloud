@using MagiCommon
@using MagiCommon.Extensions
@using MagiCommon.Models

@inject IElasticManager Elastic

<Form>
    <Row Margin=Margin.Is1>
        <Column ColumnSize=ColumnSize.Is11>
            <TextEdit Placeholder="Search..." @bind-Text="SearchQuery" Float="Float.Start"></TextEdit>
        </Column>
        <Column ColumnSize=ColumnSize.Is1>
            <Button Color=Color.Primary Clicked=Search Type=ButtonType.Submit PreventDefaultOnSubmit>Search</Button>
        </Column>
    </Row>
</Form>


@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    private string UserId { get; set; }

    [Parameter]
    public List<SearchResult> Results { get; set; }

    [Parameter]
    public EventCallback<List<SearchResult>> OnSearch { get; set; }

    public string SearchQuery { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        UserId = authState.User.GetUserId();
        await base.OnInitializedAsync();
    }

    public async Task Search()
    {
        if (!string.IsNullOrWhiteSpace(SearchQuery))
        {
            Results = await Elastic.SearchAsync(UserId, SearchQuery);
        }
        else
        {
            Results = await Elastic.GetDocumentsAsync(UserId, false);
        }
        await OnSearch.InvokeAsync(Results);
    }
}
